{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifcations","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","authErrror","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2aaaf180.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n\r\n                <li><NavLink to='/create'>New Project</NavLink></li>\r\n                <li><a onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                {props.profile.initials}\r\n                </NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore(); \r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifcations = (props) => {\r\n    const{notifications} = props;\r\n    return (\r\n      <div className=\"section\">\r\n          <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                  <span className=\"card-title\">Notifications</span>\r\n                  <ul className=\"notifications\">\r\n                      { notifications && notifications.map(item => {\r\n                          return (\r\n                              <li key={item.id}>\r\n                                  <span className=\"pink-text\">{item.user} </span>\r\n                                  <span>{item.content}</span>\r\n                                  <div className=\"gery-text note-date\">\r\n                                    {moment(item.time.toDate()).fromNow()}\r\n                                  </div>\r\n                              </li>\r\n                          )\r\n                      })}\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notifcations","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n         <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className = \"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n           { projects && projects.map(project => {\r\n               return (\r\n                   <Link to={'/project/' + project.id} key={project.id}>\r\n                   <ProjectSummary project={project}  />\r\n                   </Link>\r\n               )\r\n           })}\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects, \r\n        auth: state.firebase.auth, \r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', limit: 3, orderBy: ['createdAt', 'desc']}, \r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails= (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{ project.title}</span>\r\n                <p>{ project.content }</p>\r\n            </div>\r\n            <div className=\"card-action rey lighten-4 grey-text\">\r\n                <div className=\"\">Posted by { project.authorFirstName}{ project.authorLastName }</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>loading project...</p>\r\n            </div>\r\n            )\r\n    }\r\n\r\n}\r\n        \r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\nconnect(mapStateToProps),\r\nfirestoreConnect([\r\n    { collection: 'projects' }\r\n])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authErrror,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '', \r\n        password: '',\r\n        firstName: '', \r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       this.props.signUp(this.state)\r\n    }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n        <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\t\t            \r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p> { authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '', \r\n        content: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n  render() {\r\n      const { auth } = this.props; \r\n      if (!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <div className=\"grey-text text-darken-3\">Create New Project</div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName, \r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n\r\n        \r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  \r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state\r\n      case 'SIGNUP_SUCCESS': \r\n        console.log('signup success');\r\n        return {\r\n          ...state, \r\n          authError: null\r\n        }\r\n      case 'SIGNUP_ERROR': \r\n        console.log('signup error');\r\n        return {\r\n          ...state, \r\n          authError: action.err.message\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer, \r\n    project: projectReducer, \r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n}); \r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCKpwcemKM2bclRkXB0SNkH8DSdJXW4bpY\",\r\n    authDomain: \"netninja-marioplan-857a1.firebaseapp.com\",\r\n    databaseURL: \"https://netninja-marioplan-857a1.firebaseio.com\",\r\n    projectId: \"netninja-marioplan-857a1\",\r\n    storageBucket: \"netninja-marioplan-857a1.appspot.com\",\r\n    messagingSenderId: \"341943447274\"\r\n  };\r\n\r\n  \r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n        )\n        );  \n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();    \n  });"],"sourceRoot":""}